#!/bin/bash

# Check if the first argument is -v or --verbose
verbose=0
if [[ $1 == "-v" ]] || [[ $1 == "--verbose" ]]; then
    verbose=1
    # Shift the positional parameters to the left, effectively removing the first argument
    shift
fi

# Define a function for verbose output
function verbose_output {
    if [[ $verbose -eq 1 ]]; then
        echo "$1"
    fi
}

# Set CURRENT_PATH to the current working directory
CURRENT_PATH=$(pwd)
verbose_output "Set CURRENT_PATH to $CURRENT_PATH"

# Switch to the oe-init-build-env directory
pushd $CURRENT_PATH/srcs/poky/
verbose_output "Switched to $(pwd)"

# Source the oe-init-build-env script
source oe-init-build-env
verbose_output "Sourced the oe-init-build-env script"

# Add the necessary layers to bblayers.conf
bitbake-layers add-layer ../meta-openembedded/meta-oe
bitbake-layers add-layer ../meta-openembedded/meta-python
bitbake-layers add-layer ../meta-openembedded/meta-networking
bitbake-layers add-layer ../meta-openembedded/meta-filesystems
verbose_output "Added the meta-openembedded layers to bblayers.conf"

bitbake-layers add-layer ../meta-virtualization
verbose_output "Added the meta-virtualization layer to bblayers.conf"

bitbake-layers add-layer ../meta-secure-core/meta-tpm2
verbose_output "Added the meta-tpm2 layer to bblayers.conf"

bitbake-layers add-layer ../meta-confidential-compute
verbose_output "Added the meta-confidential-compute layer to bblayers.conf"

bitbake-layers add-layer ../meta-evm
verbose_output "Added the meta-evm layer to bblayers.conf"

bitbake-layers add-layer ../meta-rust-bin
verbose_output "Added the meta-rust-bin layer to bblayers.conf"

bitbake-layers add-layer ../meta-clang
verbose_output "Added the meta-clang layer to bblayers.conf"

bitbake-layers add-layer ../meta-observability
verbose_output "Added the meta-observability layer to bblayers.conf"

bitbake-layers add-layer ../meta-custom-podman
verbose_output "Added the meta-custom-podman layer to bblayers.conf"
# Return to the original directory
popd
verbose_output "Returned to $(pwd)"


# Apply patches
for patch in $CURRENT_PATH/srcs/yocto-manifests/config_files/tdx-rbuilder/patches/patch-*; do
    # Extract the filename from the patch file and remove the "patch-" prefix
    filename=$(basename $patch | sed 's/^patch-//')
    verbose_output "Processing patch file $patch"

    # Apply the patch to the corresponding file in srcs/poky/build/conf/
    patch -N $CURRENT_PATH/srcs/poky/build/conf/$filename -i $patch
    verbose_output "Applied patch to $CURRENT_PATH/srcs/poky/build/conf/$filename"
done
